<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>A/B test 101</title>
    <url>/blog/abtest101/</url>
    <content><![CDATA[<h2 id="Goal"><a href="#Goal" class="headerlink" title="Goal"></a>Goal</h2><p>Compare the two versions (A&amp;B) of a variable to find out which performs better in a controlled environment.</p>
<span id="more"></span>
<h2 id="Some-Definitions"><a href="#Some-Definitions" class="headerlink" title="Some Definitions"></a>Some Definitions</h2><p><strong>population:</strong> all the customers buying your product<br><strong>sample:</strong>¬†number of customers that participated in the test</p>
<h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><ol>
<li><p>Setup Objective: The key Metric to measure your testing target (User satisfaction &#x2F; Conversion Rate ‚Ä¶ etc)</p>
</li>
<li><p>Make Hypothesis</p>
<ul>
<li>Null hypothesis $H_{0}$<br>Null hypothesis states that sample observations result purely from chance. Ex: ‚Äùthere is no difference in the customer satisfaction processed by A and B‚Äù</li>
<li>Alternative Hypothesis $H_{a}$<br>The testing target. Ex: ‚ÄúCustomer satisfaction processed by A is higher than processed by B‚Äù.</li>
</ul>
</li>
<li><p>Create Control Group and Test Group: Randomly select from population,  divide into 2 groups:</p>
<ul>
<li>Control Group: Use old setting, A</li>
<li>Test (Variant) Group: Use new setting, B</li>
</ul>
</li>
<li><p>Conduct test and Collect Data. There could be two bias from this stage:</p>
<ul>
<li>Sampling Bias: Random sampling is important in hypothesis testing because it eliminates sampling bias, and¬†<strong>it‚Äôs important to eliminate bias because you want the results of your A&#x2F;B test to be representative of the entire population rather than the sample itself</strong></li>
<li>Under Coverage Bias: we would encounter this bias when sample too few observations</li>
</ul>
</li>
<li><p>Calculate Statistical Significance<br>If we observe a difference like ‚Äúthe average of A‚Äôs satisfaction score is 3.9 and B‚Äôs is 4.2‚Äù, <em>Don‚Äôt toast too early</em> üòÇ¬† We should always run a <span class="exturl" data-url="aHR0cHM6Ly93d3cuc29jc2Npc3RhdGlzdGljcy5jb20vdGVzdHMvc3R1ZGVudHR0ZXN0L2RlZmF1bHQyLmFzcHg=">two-sample T-Test</span> to get statistical proof of our experiment.</p>
<ol>
<li><strong>Significance level (</strong>$\alpha$<strong>, setup before the test):</strong>¬†The significance level is the probability of rejecting the null hypothesis when it is true. Generally, we use the significance value of 0.05.</li>
<li><strong>P-Value ($p$, calculated):</strong>¬†It is the probability that the difference between the two values is just because of random chance. P-value is evidence against the null hypothesis. The smaller the p-value stronger the chances to reject the $H_{0}$. For the significance level of 0.05, if the p-value is lesser than it hence we can reject the null hypothesis (<em>Reject</em> hypothesis that B has no difference between A)</li>
<li><strong>Confidence interval:</strong>¬†The confidence interval is an observed range in which a given percentage of test outcomes fall. We manually select our desired confidence level at the beginning of our test. Generally, we take a 95% confidence interval (<strong>$p$&#x3D;0.05</strong>)</li>
<li>One-tailed or two-tailed hypothesis?<br> two-tailed, because we want to test whether two distribution (A‚Äôs &#x2F; B‚Äôs) is different</li>
</ol>
</li>
<li><p>Read ‚Üí Explain ‚Üí Action</p>
</li>
</ol>
<h2 id="Common-Mistakes"><a href="#Common-Mistakes" class="headerlink" title="Common Mistakes"></a>Common Mistakes</h2><ul>
<li>Works best when testing <strong>Incremental Changes</strong> (UX changes, new features). Doesn‚Äôt work well when testing major changes, new branding, or completely new UX.</li>
<li><strong>Invalid hypothesis</strong>: The whole experiment depends on one thing i.e the hypothesis. What should be changed? Why should it be changed, what the expected outcome is, and so on? If you start with the wrong hypothesis, the probability of the test succeeding, decreases</li>
<li><strong>Testing too Many Elements Together:</strong>¬†Industry experts caution against running too many tests at the same time. Testing too many elements together makes it difficult to pinpoint which element influenced the success or failure. Thus, prioritization of tests is indispensable for successful A&#x2F;B testing</li>
<li><strong>Ignoring Statistical Significance:</strong>¬†It doesn‚Äôt matter what you feel about the test. Irrespective of everything, whether the test succeeds or fails, allow it to run through its entire course so that it reaches its statistical significance</li>
<li><strong>Not considering the external factor:</strong>¬†Tests should be run in comparable periods to produce meaningful results. For example, it is unfair to compare website traffic on the days when it gets the highest traffic to the days when it witnesses the lowest traffic because of external factors such as sale or holidays</li>
</ul>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuc2VsZG9uLmlvL2EtYi10ZXN0aW5nLWZvci1tYWNoaW5lLWxlYXJuaW5nIzp+OnRleHQ9QSUyRkIlMjB0ZXN0aW5nJTIwaXMlMjBhbixjYW1wYWlnbnMlMjBhbmQlMjBnb2FsJTIwY29udmVyc2lvbiUyMHJhdGVzLg==">A&#x2F;B Testing for Machine Learning</span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuYW5hbHl0aWNzdmlkaHlhLmNvbS9ibG9nLzIwMjAvMTAvYWItdGVzdGluZy1kYXRhLXNjaWVuY2Uv">A&#x2F;B Testing for Data Science using Python ‚Äì A Must-Read Guide for Data Scientists</span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuc29jc2Npc3RhdGlzdGljcy5jb20vdGVzdHMvc3R1ZGVudHR0ZXN0L2RlZmF1bHQyLmFzcHg=">T-Test Calculator for 2 Independent Means</span></li>
</ol>
]]></content>
      <categories>
        <category>statistics</category>
      </categories>
      <tags>
        <tag>data science</tag>
        <tag>mle</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Setup VScode with X11 in 5 Minutes</title>
    <url>/blog/vscode-setup-x11/</url>
    <content><![CDATA[<p><span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20v">VScode</span> is one of the most powerful tools for all programmers, which integrates perfect remote connection for all types of servers (Linux&#x2F;Mac&#x2F;Windows). Though you may have worked fluently with a pure command-line interface, sometimes a few GUIs could be handy and save your day. In this post, I‚Äôll show you how I forward the GUIs using X11 forwarding.</p>
<blockquote>
<p>This post is for: </p>
<ul>
<li>People would like to access GUIs in their local laptop&#x2F;machine from a remote server.</li>
</ul>
</blockquote>
<span id="more"></span>
<blockquote>
<p>Prerequisite:</p>
<ul>
<li>VSCode installed</li>
<li>Remote-ssh extension installed</li>
</ul>
<p>Environment:</p>
<ul>
<li>Local: MacBookAir M1 2021 (BigSur 11.3.1)</li>
<li>Remote: Ubuntu 20.04.4</li>
</ul>
</blockquote>
<h2 id="1-Setup-key-based-authentication"><a href="#1-Setup-key-based-authentication" class="headerlink" title="1. Setup key-based authentication"></a>1. Setup key-based authentication</h2><p>To enable the VScode integrated X11 server connection, you must use the <span class="exturl" data-url="aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9yZW1vdGUvdHJvdWJsZXNob290aW5nI19xdWljay1zdGFydC11c2luZy1zc2gta2V5cw==">key-based authentication</span> to connect to your server. If you have already set up this before, please directly head to the next step.</p>
<h3 id="1-1-Create-your-local-SSH-key-pair"><a href="#1-1-Create-your-local-SSH-key-pair" class="headerlink" title="1.1 Create your local SSH key pair"></a>1.1 Create your local SSH key pair</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -b <span class="token number">4096</span> -f <span class="token environment constant">$HOME</span>/.ssh/id_rsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>This will generate ssh <code>private-key</code> at <code> $HOME/.ssh/id_rsa</code> and <code>public-key</code> at <code>$HOME/.ssh/id_rsa.pub</code>.</p>
<h3 id="1-2-Register-your-ssh-key-to-the-remote-server"><a href="#1-2-Register-your-ssh-key-to-the-remote-server" class="headerlink" title="1.2 Register your ssh key to the remote server"></a>1.2 Register your ssh key to the remote server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">PUBKEYPATH</span><span class="token operator">=</span><span class="token string">"<span class="token environment constant">$HOME</span>/.ssh/id_rsa.pub"</span> <span class="token comment"># the location of you ssh public key, should been generated in Step 1.1</span>
<span class="token assign-left variable">HOST_NAME</span><span class="token operator">=</span><span class="token string">"192.168.1.1"</span> <span class="token comment"># remote server address</span>
<span class="token assign-left variable">HOST_PORT</span><span class="token operator">=</span><span class="token string">"22"</span> <span class="token comment"># remote server port, if not configured leave it 22</span>
<span class="token assign-left variable">USER_AT_HOST</span><span class="token operator">=</span><span class="token string">"XXXX"</span> <span class="token comment"># your user name to log in remote server</span>
ssh-copy-id -i <span class="token string">"<span class="token variable">$PUBKEYPATH</span>"</span> -p <span class="token string">"<span class="token variable">$HOST_PORT</span>"</span> <span class="token string">"<span class="token variable">$USER_AT_HOST</span>@<span class="token variable">$HOST_NAME</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>If you type all the information correctly, the server will ask you to type the password once.</p>
<h3 id="1-3-Configure-VScode-ssh-connection"><a href="#1-3-Configure-VScode-ssh-connection" class="headerlink" title="1.3 Configure VScode ssh connection"></a>1.3 Configure VScode ssh connection</h3><p>Type <code>F1</code>&gt;<code>ssh</code> to VScode‚Äôs ssh configuration<br><img data-src="/blog/vscode-setup-x11/1.3-config.png"><br>If you don‚Äôt see <code>HOST_NAME</code> that looks similar to your remote host, paste below to the configuration file (<strong>Replace with your information</strong>):</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">Host My<span class="token punctuation">-</span>Remote<span class="token punctuation">-</span>Host
    HostName 192.168.1.1
    User XXXX
    Port 22
    IdentityFile ~/.ssh/id<span class="token punctuation">-</span>rsa.pub
    ForwardAgent yes
    ForwardX11 yes
    ForwardX11Trusted yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="1-4-Test-the-key-based-authentication"><a href="#1-4-Test-the-key-based-authentication" class="headerlink" title="1.4 Test the key-based authentication"></a>1.4 Test the key-based authentication</h3><p>Reconnect to the remote server. Now you should be able to log in without typing password.</p>
<h2 id="2-Setup-X11-connection"><a href="#2-Setup-X11-connection" class="headerlink" title="2. Setup X11 connection"></a>2. Setup X11 connection</h2><p>Now let‚Äôs start configuring the X11.</p>
<h3 id="2-1-Install-remote-X11-extension-from-the-marketplace"><a href="#2-1-Install-remote-X11-extension-from-the-marketplace" class="headerlink" title="2.1 Install remote X11 extension from the marketplace"></a>2.1 Install remote X11 extension from the marketplace</h3><p>There are two extensions:</p>
<ul>
<li>Remote X11</li>
<li>Remote X11 (ssh)<br>For ease, we just install both on the local and remote machine here.<br><img data-src="/blog/vscode-setup-x11/2.1-install-remote.png"></li>
</ul>
<h3 id="2-2-Configure-X11-settings"><a href="#2-2-Configure-X11-settings" class="headerlink" title="2.2 Configure X11 settings"></a>2.2 Configure X11 settings</h3><p>Now, use the remote-ssh extension to connect to the remote server. It should open up a new window. Open the marketplace of this new window, find <strong>Remote X11 (ssh)</strong>, right-click and open the extension setting.</p>
<h4 id="2-2-1-User-Local-Setting"><a href="#2-2-1-User-Local-Setting" class="headerlink" title="2.2.1 User (Local) Setting"></a>2.2.1 User (Local) Setting</h4><p>For user setting, change the Authentication Method to <code>keyFile</code>. Also, provide the correct <code>private-key</code> path in<br><img data-src="/blog/vscode-setup-x11/2.2.1-user-local-setting.png"></p>
<h4 id="2-2-2-Remote-Server-Setting"><a href="#2-2-2-Remote-Server-Setting" class="headerlink" title="2.2.2 Remote (Server) Setting"></a>2.2.2 Remote (Server) Setting</h4><p>Then, switch to the Remote tab. Scroll down and find <code>Remote.X11.ssh:Host</code> and <code>Remote.X11.ssh:Port</code>. Make sure these two match your server connection method.<br><img data-src="/blog/vscode-setup-x11/2.2.2-remote-setting.png"></p>
<h3 id="2-3-Test-the-X11-host-connection"><a href="#2-3-Test-the-X11-host-connection" class="headerlink" title="2.3 Test the X11 host connection"></a>2.3 Test the X11 host connection</h3><p>Close the window and reconnect to the remote server. Open the Remote X11 (ssh) tab, if you see the below information, congratulation, you have successfully configured the X11 settings.<br><img data-src="/blog/vscode-setup-x11/2.3-test.png"></p>
<h3 id="2-4-Install-the-local-Xserver"><a href="#2-4-Install-the-local-Xserver" class="headerlink" title="2.4 Install the local Xserver"></a>2.4 Install the local Xserver</h3><p>Finally, to successfully ‚ÄúDraw‚Äù the received X11 locally, you‚Äôll need to install the Xserver. Depending on your local environment, there are different open-source projects you can choose:</p>
<ul>
<li>MacOS: <span class="exturl" data-url="aHR0cHM6Ly93d3cueHF1YXJ0ei5vcmcv">Xquartz</span></li>
<li>Windows: <span class="exturl" data-url="aHR0cDovL3d3dy5zdHJhaWdodHJ1bm5pbmcuY29tL1htaW5nTm90ZXMv">Xming</span></li>
</ul>
<h3 id="2-5-Final-test-with-xclock"><a href="#2-5-Final-test-with-xclock" class="headerlink" title="2.5 Final test with xclock"></a>2.5 Final test with xclock</h3><p>After installing the Xserver, our final step would be testing a remote GUI.</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">xclock<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>You should see the remote GUI successfully forward to your local machine.<br><img data-src="/blog/vscode-setup-x11/2.4-test-xclock.png"></p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>vscode</tag>
        <tag>linux</tag>
        <tag>macOS</tag>
        <tag>X11</tag>
      </tags>
  </entry>
</search>
